def world1(a: Ptr[str]) -> None:
    # *a is not copied when printing as print calls does not copy (optimization when calling builtins)
    print(unref(a))
    println(" world")


def world2(a: Ptr[str]) -> None:
    # *a is copied to b
    b: str = unref(a)
    print(b)
    println(" world")

def world3(a: AnyPtr) -> None:
    b: Ptr[str] = cast("Ptr[str]", a)
    world1(b)

def main() -> int:
    my_empty: str
    hello: str = "hello"
    i: int = 5
    while i > 0:
        # Basically this avoids copying hello variable when calling world
        world1(getref(hello))
        world2(getref(hello))
        world3(cast("AnyPtr", getref(hello)))
        i = i - 1
    println(my_empty != None)
    world1(getref(my_empty))
    return 0
