runtimefeature "utf8proc"

# UTF8 iteration

@nativedefine("struct utf8proc_iter_state*")
class Utf8IterateState:
    # Iterator state for UTF-8 iteration
    # See the codepoint for current character
    step_size: int
    codepoint: int

@native
def new_iter(s: str) -> Utf8IterateState:
    # Create a new iterator from given string
    ccode """struct utf8proc_iter_state* x = calloc(1, sizeof(struct utf8proc_iter_state));
    if (x == NULL) return x;
    x->str_original = (utf8proc_uint8_t *) nn__s;
    x->str_position = (utf8proc_uint8_t *) nn__s;
    x->length = yk__sdslen(nn__s);
    x->step_size = 0;
    x->codepoint = -1;
    return x"""

@native
def del_iter(s: Utf8IterateState) -> None:
    # Delete the iterator object after done
    ccode """yk__sdsfree((yk__sds)nn__s->str_original);
    free(nn__s)"""

@native
def iterate(s: Utf8IterateState) -> bool:
    # Go to next character
    # Returns false if nothing to read or we ran out of length of string
    ccode """if (nn__s->length <= 0) { return false; }
    utf8proc_int32_t val;
    utf8proc_ssize_t read_bytes = utf8proc_iterate(nn__s->str_position, nn__s->length, &val);
    if (read_bytes <= 0) {
        return false;
    }
    nn__s->str_position += read_bytes;
    nn__s->length -= read_bytes;
    nn__s->step_size = read_bytes;
    nn__s->codepoint = val;
    return true"""
