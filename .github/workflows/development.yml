on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  PYTHONIOENCODING: utf-8
  PYTHONLEGACYWINDOWSSTDIO: utf-8

jobs:
  check-windows-x86_64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4
        with:
          path: main
          submodules: 'true'
      - name: Preparations
        working-directory: main
        run: |
          git submodule init
          git submodule update
          mkdir compiler/cmake-build-release
      - name: Test
        working-directory: main/compiler/cmake-build-release
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release ../ -B .
          cmake --build . --config Release
          cd ..\bin
          Copy-Item -Path ".\Release\*" -Destination ".\" -Force
          .\YakshaTests.exe
  check-ubuntu-x86_64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04,ubuntu-24.04]
    steps:
    - name: Checkout git repo
      uses: actions/checkout@v4
      with:
        path: main
        submodules: 'true'
    - name: Preparations
      working-directory: main
      run: |
        git submodule init
        git submodule update
        sudo apt update
        sudo apt install -y cmake ninja-build g++
        mkdir -p compiler/cmake-build-release
    - name: Configuring CMake
      working-directory: main/compiler/cmake-build-release
      run: |
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../
    - name: Build
      working-directory: main/compiler/cmake-build-release
      run: |
        ninja all
    - name: Test
      working-directory: main/compiler/cmake-build-release
      run: |
        ninja test
  check-macos-x86_64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4
        with:
          path: main
          submodules: 'true'
      - name: Preparations
        working-directory: main
        run: |
          git submodule init
          git submodule update
          brew install cmake ninja gcc p7zip
          mkdir -p compiler/cmake-build-release
      - name: Configuring CMake
        working-directory: main/compiler/cmake-build-release
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../
      - name: Build
        working-directory: main/compiler/cmake-build-release
        run: |
          ninja all
      - name: Test
        working-directory: main/compiler/cmake-build-release
        env:
            CTEST_OUTPUT_ON_FAILURE: 1
            CTEST_PARALLEL_LEVEL: 1
        run: |
          ninja test  
      - name: Upload output.c on test failure
        if: ${{ steps.test.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: output.c-${{ matrix.os }}
          path: |
            main/**/output.c
          if-no-files-found: ignore
          retention-days: 7
      - name: Fail job if tests failed
        if: ${{ steps.test.outcome == 'failure' }}
        run: exit 1
