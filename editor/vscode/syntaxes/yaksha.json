{
	"patterns": [
		{
			"name": "string.quoted.double.yaksha",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.yaksha",
					"match": "\\\\."
				}
			]
		},
		{
			"name": "comment",
			"begin": "(^[ \\t]+)?(?=#)",
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": "#",
					"end": "\\n",
					"name": "comment.line.number-sign.python"
				}
			]
		},
		{
			"name": "constant.numeric.integer.decimal.yaksha",
			"match": "\\b([1-9]+[0-9]*|0)"
		},
		{
			"name": "constant.language.yaksha",
			"match": "\\b(True|False|None)\\b"
		},
		{
			"name": "keyword.language.yaksha",
			"match": "\\b(while|import|as|if|else|return|break|continue|pass)\\b"
		},
		{
			"name": "invalid.spaces.yaksha",
			"match": "^\\s+$"
		},
		{
			"name": "keyword.deletion.related.yaksha",
			"match": "\\b(defer|del)\\b"
		},
		{
			"name": "keyword.native.related.yaksha",
			"match": "\\b(ccode)\\b"
		},		
		{
			"name": "entity.name.type.yaksha",
			"match": "\\b(str|mstr|strliteral|int|bool|i8|i16|i32|i64|float|double|u8|u16|u32|u64|Array)\\b"
		},
		{
			"name": "support.function.yaksha",
			"match": "\\b(arrput|len|print|println)\\b"
		},
		{
			"name": "keyword.decorator.yaksha",
			"match": "@\\s*(varargs|nativedefine|nativemacro|native)"
		},
		{
			"name": "keyword.operator.yaksha",
			"match": "\\.|\\+|\\-|\\*|\\\/|\\:|\\[|\\]|\\(|\\)|,|>|<|<\\=|>\\=|\\=\\=|\\=|\\bnot\\b|\\bor\\b|\\band\\b|!\\=|\\->"
		},
		{
			"match": "^(class)\\s+([a-zA-Z_][a-zA-Z0-9_]+)\\s*",
			"captures": {
				"1": {
					"name": "keyword.language.yaksha"
				},
				"2": {
					"name": "support.class.yaksha"
				}
			}
		},
		{
			"match": "^(def)\\s+([a-zA-Z_][a-zA-Z0-9_]+)\\s*",
			"captures": {
				"1": {
					"name": "keyword.language.yaksha"
				},
				"2": {
					"name": "support.function.yaksha"
				}
			}
		}
	],
	"repository": {


	},
	"scopeName": "source.yaksha"
}